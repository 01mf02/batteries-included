name="aaa"
version="@VERSION@"
description="Batteries Included AAA, lite distribution of OCaml libraries"
requires="unix,num,bigarray,str,findlib,camomile"
requires(mt)="unix,num,bigarray,threads,str,findlib,camomile"
archive(toploop)="batteries.cma,batteries_help.cmo"
archive(byte)  ="batteries.cma"
archive(native)="batteries.cmxa"

package "pa_string" (
        description = "pseudo-native Unicode strings (container)"
	version     = "@VERSION@"
	package "syntax" (
                requires="camlp4,estring"
		description = "pseudo-native Unicode strings (syntax extension)"
		version     = "@VERSION@"
		archive(syntax, preprocessor) = "pa_strings.cma"
		archive(syntax, toploop)      = "pa_strings.cma"
	)
)

package "pa_comprehension" (
	description = "comprehension expressions (container)"
	version     = "@VERSION@"
	package "syntax" (
                requires = "camlp4"
		description = "comprehension expressions (syntax extension)"
		version                       = "@VERSION@"
		archive(syntax, preprocessor) = "pa_comprehension.cmo"
		archive(syntax, toploop)      = "pa_comprehension.cmo"
	)
)

package "syntax" (
        version = "@VERSION@"
        description = "Standard extensions to the OCaml language, full package"
        # the direct approach (requiring the .syntax packages) doesn't work:
        # you get "When using -syntax, the META variable 'preprocessor' must
        # be set" even when we require camlp4 or set preprocessor here, so
        # we use a brute-force approach
        requires = "camlp4, estring"
        requires(toploop) = "camlp4, estring, aaa"
        archive(syntax, preprocessor) = "pa_strings.cma pa_comprehension.cmo"
        archive(syntax, toploop)      = "pa_strings.cma pa_comprehension.cmo"
)
