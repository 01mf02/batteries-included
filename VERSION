This is the third alpha release of Batteries Included.

= Changes since alpha 2
== General
* Batteries Included is now available for both OCaml 3.10 and 3.11 .

== Language extensions
* It is now possible to merge several modules into one.
* General (and extendable) structure comprehension, working on lists, arrays, lazy lists, enumerations, ...
* (OCaml 3.11 only) Native Unicode strings, including pattern-matching and constant expression elimination.

== Library
* Module hierarchy completely reworked.
* Thread-safe input/output when required.
* A new abstract thread-safety module, to ensure future compatibility with coThreads.
* Old-style ListLabels, ArrayLabels, etc. replaced with List.Labels, Array.Labels, etc.
* Plenty of new functions in Enum, Array, Hashtbl, Pervasives, String, Rope, Bingarray, Dllist, DynArray, Arg, Sys.
* The File module now permits using temporary files.
* Several modules have been renamed (SafeInt, Labels).
* New compatibility layer with OCamlNet.
* New Unix module, compatible with IO.
* New module Future.Path for manipulating paths.
* New module CharEncoding for transcoding inputs/outputs.
* New module Date for manipulating time.

== Documentation
* New documentation by topic
* New documentation generator, with topic management
* A number of additions, e.g. a tutorial on [fold], [iter], [map] in the documentation of Pervasives.

== Bugfixes
* bug 100 (Enum.seq) fixed
* Set.enum/backwards now enumerate in the right order

== Toplevel
* Pretty-printers for UChar, Rope, String.Cap, UTF8.
* Loading speed improved.

== Docfixes
* bug 101 (Enum.for_all) fixed
* Documentation fixes in List.

= Changes since alpha 1
* Plenty of bugfixes
* Plenty of docfixes
* We now have a custom ocaml, ocamlc, ocamlopt which may be used as (near) drop-in replacements for the regular ocaml, ocamlc, ocamlopt
* We now have a working toplevel
* We now have a parser combinator library
* Many additional functions
* We now have a set of standard operators for function composition, etc.
* Unicode characters and strings now have all the features of their non-Unicode counterparts
* Improved type-safety of Unicode
* Most data structures now support enumerations, s-expressions, printing to an output
* Inputs and outputs may now be either garbage-collected, closed manually, closed by their dependencies
or closed when leaving the program
* We now have transparent on-the-fly gzip compression/decompression of channels.
* Additional examples
* Additional documentation
* Access to some elements of the system configuration
* We are now mostly rid of [in_channel]/[out_channel]
* The toplevel now offers a tutorial and on-line help
* In [Ref], now using the same naming conventions as C, Java...
* Build system now uses autoconf
* The documentation generator now builds an external index of values which may be used for auto-completion

= Changes since pre-release 4
* Plenty of additional functions
* Plenty of bugfixes
* Several syntax extensions for auto-opening Batteries, etc.
* Serialization/deserialization using S-Expressions (SExplib)
* Unicode strings
* Unicode ropes
* A few examples
* New test-cases
* Much more documentation
* Extended streams
* Two different libraries, one with threads, one without

For more informations, see the ChangeLog
